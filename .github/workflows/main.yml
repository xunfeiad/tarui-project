name: Build and release
on:
  push:
    branches: [main]
  workflow_dispatch:
jobs:
  release:
    permissions:
      contents: write
      actions: write
      attestations: write
      deployments: write
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      # 检出存储库
      - name: Checkout repository
        uses: actions/checkout@v4
      # 设置 rust 环境
      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
      # rust 缓存
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
      
      # 设置 node 环境
      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      # 全局安装pnpm
      - name: Install pnpm
        run: npm install -g pnpm
      
      # 安装前端依赖
      - name: Install frontend dependencies
        run: pnpm install
      # 构建应用
      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'Redog v__VERSION__'
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false


      # 验证打包结果
      - name: Verify release artifacts
        if: ${{ matrix.platform == 'macos-latest' }}
        run: |
          if [ ! -f "src-tauri/target/release/bundle/dmg/*.dmg" ]; then
            echo "Error: DMG file not found!"
            exit 1
          fi

      - name: Verify release artifacts (Windows)
        if: ${{ matrix.platform == 'windows-latest' }}
        run: |
            if not exist "src-tauri\\target\\release\\bundle\\msi\\*.msi" (
              echo "Error: MSI file not found!"
              exit 1
            )

      # 上传打包文件到 Release
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_id: ${{ steps.build_tauri.outputs.release_id }}
          asset_path: "src-tauri/target/release/bundle/**/*"
          asset_name: ${{ matrix.platform }}-redog
          asset_content_type: application/octet-stream
